name: Test Suite

on:
  push:
    branches:
      - main

jobs:
  build:
    name: 'Release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout Code

      - uses: actions/setup-node@v4
        name: Setup Node.js
        with:
          node-version: '22'

      - name: Test
        run: |
          npm i
          npm run prepublishOnly

      - name: Tag
        id: autotagger
        if: success()
        uses: butlerlogic/action-autotag@stable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Pre-release
        id: prerelease_check
        if: steps.autotagger.outputs.tagname != ''
        run: |
          if [[ "${{ steps.autotagger.outputs.version || steps.autotagger.outputs.tagname }}" == *"-"* ]]; then echo "is_prerelease=true" >> $GITHUB_OUTPUT; else echo "is_prerelease=false" >> $GITHUB_OUTPUT; fi

      - name: Release
        id: create_release
        if: steps.autotagger.outputs.tagname != ''
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ steps.autotagger.outputs.tagname }}
          name: ${{ steps.autotagger.outputs.tagname }}
          body: ${{ steps.autotagger.outputs.tagmessage }}
          draft: false
          prerelease: ${{ steps.prerelease_check.outputs.is_prerelease }}

      - name: Build Release Artifacts
        id: build_release
        if: steps.create_release.outputs.id != ''
        run: |
          dev build --pack
          cp -rf .dist ./dist

      - name: Upload Release Artifacts
        uses: AButler/upload-release-assets@v2.0
        if: steps.create_release.outputs.id != ''
        with:
          files: '.dist/*.tar.gz'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ steps.autotagger.outputs.tagname }}

      - name: Publish to npm
        id: publish_npm
        if: steps.autotagger.outputs.tagname != ''
        uses: author/action-publish@stable
        with:
          scan: ./dist
        env:
          REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}

      - name: Rollback Release
        if: failure() && steps.create_release.outputs.id != ''
        uses: author/action-rollback@stable
        with:
          tag: ${{ steps.autotagger.outputs.tagname }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}